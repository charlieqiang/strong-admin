<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.strong.system.mapper.UserMapper">

    <sql id="Base_Column_List">
        id, username, password, account, avatar, dept_id, phone, hired_date, use_status
    </sql>

    <resultMap id="UserMap" type="com.strong.system.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="account" property="account"/>
        <result column="avatar" property="avatar"/>
        <result column="dept_id" property="deptId"/>
        <result column="phone" property="phone"/>
        <result column="hired_date" property="hiredDate"/>
        <result column="use_status" property="useStatus"/>
    </resultMap>

    <select id="getUserById" parameterType="String" resultMap="UserMap">
        SELECT <include refid="Base_Column_List" /> FROM user WHERE id = #{id}
    </select>


    <select id="getUserByAccount" parameterType="String" resultMap="UserMap">
        SELECT <include refid="Base_Column_List" /> FROM user WHERE account = #{account}
    </select>

    <select id="getUserRolesById" parameterType="String" resultType="string">
        SELECT role.code FROM user
        JOIN user_role ON user.id = user_role.user_id
        JOIN role ON role.id = user_role.role_id
        WHERE user.id = #{id}
    </select>

    <delete id="deleteUserRoleByRoleId" parameterType="String">
        DELETE FROM user_role WHERE role_id = #{roleId}
    </delete>

    <select id="getUserRolesByUserIdList" parameterType="java.util.List" resultType="com.strong.system.vo.UserRoleVo">
        SELECT
        u.id AS userId,
        r.code AS roleCode
        FROM user u
        LEFT JOIN user_role ur ON u.id = ur.user_id
        LEFT JOIN role r ON ur.role_id = r.id
        WHERE u.id IN
        <foreach collection="list" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <select id="getUserPage" resultMap="UserMap" parameterType="com.strong.system.entity.User">
        SELECT <include refid="Base_Column_List" /> FROM user
        <where>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
        </where>
    </select>

    <insert id="addUser" parameterType="com.strong.system.entity.User">
        INSERT INTO user (id, username, password, account, avatar)
        VALUES (#{id}, #{username}, #{password}, #{account}, #{avatar})
    </insert>

    <insert id="addUserRoleBatch" parameterType="java.util.List">
        INSERT INTO user_role (id, user_id, role_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.id}, #{item.userId}, #{item.roleId})
        </foreach>
    </insert>

    <delete id="deleteUserById" parameterType="String">
        DELETE FROM user WHERE id = #{userId}
    </delete>

    <delete id="deleteUserRoleByUserId" parameterType="String">
        DELETE FROM user_role WHERE user_id = #{userId}
    </delete>

    <update id="updateUser" parameterType="com.strong.system.entity.User">
        UPDATE user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="account != null and account != ''">
                account = #{account},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="deptId != null and deptId != ''">
                dept_id = #{deptId},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="hiredDate != null">
                hired_date = #{hiredDate},
            </if>
            <if test="useStatus != null">
                use_status = #{useStatus},
            </if>
        </set>
        WHERE id = #{id}
    </update>
</mapper>
